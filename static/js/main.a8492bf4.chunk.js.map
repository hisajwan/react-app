{"version":3,"sources":["components/nav.jsx","screens/home.jsx","screens/aboutUs.jsx","screens/contactUs.jsx","screens/fortnite.jsx","screens/login.jsx","screens/mapContainter.jsx","App.js","serviceWorker.js","reducers/isLogged.js","reducers/counter.js","reducers/index.js","index.js"],"names":["Nav","state","className","to","Component","withRouter","props","useState","redirectToMap","setredirectToMap","window","addEventListener","e","alert","style","position","bottom","right","color","padding","cursor","onClick","AboutUs","useEffect","fetchFilms","abortRequest","controller","AbortController","signal","styles","backgroundColor","fontWeight","films","setFilm","console","log","abort","a","fetch","filmsResponse","json","filmsData","results","Fragment","map","film","index","event","showDetails","key","name","title","ContactUs","firstName","lastName","mobile","email","description","formValues","setFormValues","updateState","preventDefault","target","value","onSubmit","handleForm","type","placeholder","onChange","Fortnite","fetchItems","items","setItems","data","Login","isLoaded","fetchData","setState","this","children","userName","username","MapContainer","selectedPlace","width","height","google","zoom","onMarkerClick","onClose","onInfoWindowClose","GoogleApiWrapper","apiKey","App","path","exact","component","Home","Boolean","location","hostname","match","loggedReducer","action","counterReducer","allReducers","combineReducers","counter","logged","store","createStore","allReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a8492bf4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Nav extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar fixed-top navbar-dark bg-dark d-flex justify-content-between\">\r\n        <div>\r\n          <Link to=\"/\">\r\n            <li className=\"navbar-brand\">Home</li>\r\n          </Link>\r\n          <Link to=\"aboutUs\">\r\n            <li className=\"navbar-brand\">About us</li>\r\n          </Link>\r\n          <Link to=\"contactUs\">\r\n            <li className=\"navbar-brand\">Contact us</li>\r\n          </Link>\r\n        </div>\r\n        <Link to=\"login\">\r\n          <li className=\"navbar-brand\">Login</li>\r\n        </Link>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { useSelector, useDispatch } from \"react-redux\";\r\n// import { increment, decrement } from \"../actions\";\r\nfunction Home(props) {\r\n  // const style = {\r\n  //   cursor: \"pointer\",\r\n  //   width: \"max-content\",\r\n  //   top: 0\r\n  // };\r\n  // const counter = useSelector(state => state.counter);\r\n  // const dispatch = useDispatch();\r\n  const [redirectToMap, setredirectToMap] = useState(false);\r\n  window.addEventListener(\"message\", function(e) {\r\n    window.alert(\"postMessage\", e);\r\n  });\r\n\r\n  const handleClick = () => {\r\n    setredirectToMap(true);\r\n    // props.history.push(\"/aboutUs\");\r\n  };\r\n  if (redirectToMap) {\r\n    return <Redirect to=\"map\"></Redirect>;\r\n  }\r\n  return (\r\n    <div className=\"container-screen home position-relative\">\r\n      <div className=\"background\"></div>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          bottom: 0,\r\n          right: 0,\r\n          color: \"white\",\r\n          padding: \"40px\"\r\n        }}\r\n        className=\"position-absolute pull-right\"\r\n      >\r\n        <u\r\n          style={{\r\n            cursor: \"pointer\"\r\n          }}\r\n          onClick={() => handleClick()}\r\n        >\r\n          See our locations on map\r\n        </u>\r\n      </div>\r\n      {/* <div style={style} className=\"position-absolute\">\r\n        <div>Counter {counter}</div>\r\n        <div>\r\n          <button\r\n            onClick={() => dispatch(increment())}\r\n            className=\"btn btn-warning\"\r\n          >\r\n            +\r\n          </button>\r\n          <button\r\n            onClick={() => dispatch(decrement())}\r\n            className=\"btn btn-warning\"\r\n          >\r\n            -\r\n          </button>\r\n        </div>\r\n        <u onClick={handleClick}>About us</u>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Home);\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst AboutUs = () => {\r\n  useEffect(() => {\r\n    fetchFilms();\r\n    return () => abortRequest();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const controller = new AbortController();\r\n  const signal = controller.signal;\r\n  const styles = { backgroundColor: \"white\", fontWeight: \"bolder\" };\r\n  const [films, setFilm] = useState([]);\r\n\r\n  const abortRequest = () => {\r\n    console.log(\"abort\");\r\n    controller.abort();\r\n  };\r\n\r\n  async function fetchFilms() {\r\n    console.log(\"fetch\");\r\n    try {\r\n      const filmsResponse = await fetch(\"https://swapi.co/api/films\", {\r\n        signal\r\n      });\r\n      const filmsData = await filmsResponse.json();\r\n      setFilm(filmsData.results);\r\n      controller.abort();\r\n      console.log(filmsData);\r\n    } catch (error) {\r\n      console.log(\"request aborted\", error);\r\n    }\r\n  }\r\n\r\n  const showDetails = event => {\r\n    console.log(event);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"about-us container-screen\">\r\n        <div className=\"background\"></div>\r\n        <main className=\"p-3\">\r\n          <h3 className=\"text-light\">Star wars blockbusters:</h3>\r\n          <article>\r\n            <ul className=\"film-cards\">\r\n              {films.map((film, index) => (\r\n                <li\r\n                  style={styles}\r\n                  onClick={event => showDetails(event)}\r\n                  key={`film-${film.name}-index${index}`}\r\n                >\r\n                  <span>{film.title}</span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </article>\r\n        </main>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AboutUs;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction ContactUs() {\r\n  useEffect(() => {}, []);\r\n  const [formValues, setFormValues] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    mobile: \"\",\r\n    email: \"\",\r\n    description: \"\"\r\n  });\r\n  const handleForm = event => {\r\n    event.preventDefault();\r\n    console.log(\"form\", formValues);\r\n  };\r\n\r\n  const updateState = event => {\r\n    event.preventDefault();\r\n    console.log(event.target.name, event.target.value);\r\n    setFormValues({ ...formValues, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"contact-us container-screen\">\r\n        <div className=\"background\"></div>\r\n        <div className=\"overlay\"></div>\r\n        <main className=\"p-3\">\r\n          <form className=\"w-100\" onSubmit={event => handleForm(event)}>\r\n            <input\r\n              name=\"firstName\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Firstname\"\r\n              value={formValues.firstName}\r\n              onChange={e => updateState(e)}\r\n            />\r\n            <input\r\n              name=\"lastName\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Lastname\"\r\n              value={formValues.lastName}\r\n              onChange={e => updateState(e)}\r\n            />\r\n            <input\r\n              name=\"mobile\"\r\n              className=\"form-control\"\r\n              type=\"number\"\r\n              placeholder=\"9999999999\"\r\n              value={formValues.mobile}\r\n              onChange={e => updateState(e)}\r\n            />\r\n            <input\r\n              name=\"email\"\r\n              className=\"form-control\"\r\n              type=\"email\"\r\n              placeholder=\"xyz@abc.com\"\r\n              value={formValues.email}\r\n              onChange={e => updateState(e)}\r\n            />\r\n            <textarea\r\n              name=\"description\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"xyz@abc.com\"\r\n              value={formValues.description}\r\n              onChange={e => updateState(e)}\r\n            />\r\n            <input className=\"btn btn-primary\" type=\"submit\" value=\"submit\" />\r\n          </form>\r\n          <div className=\"position-relative\"></div>\r\n        </main>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ContactUs;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Fortnite() {\r\n  useEffect(() => {\r\n    fetchItems();\r\n  }, []);\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  //   const fetchItems = async() => {\r\n\r\n  //   }\r\n  async function fetchItems() {\r\n    const data = await fetch(\"https://jsonplaceholder.typicode.com/users\");\r\n    const items = await data.json();\r\n    console.log(items);\r\n    setItems(items);\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"p-3\">Fortnite</div>\r\n      {items.map(() => (\r\n        <li>fortnite</li>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Fortnite;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    isLoaded: false,\r\n    data: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  // fetch post data\r\n  // fetchPostData = async () => {\r\n  //   const postRequest = fetch(\"https://jsonplaceholder.typicode.com/users\", {\r\n  //     method: \"POST\",\r\n  //     headers: {\r\n  //       \"content-type\": \"application/json\"\r\n  //     },\r\n  //     body: JSON.stringify({})\r\n  //   });\r\n  // };\r\n\r\n  fetchData = async () => {\r\n    const data = await fetch(\"https://jsonplaceholder.typicode.com/users\");\r\n    const items = await data.json();\r\n    console.log(items);\r\n    this.setState({ isLoaded: true, data: items });\r\n  };\r\n\r\n  // fetchData() {\r\n  //   fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n  //     .then(res => res.json())\r\n  //     .then(data => {\r\n  //       this.setState({ isLoaded: true, data: data });\r\n  //       console.log(\"data\", this.state);\r\n  //     })\r\n  //     .catch(() => {});\r\n  // }\r\n\r\n  render() {\r\n    let { isLoaded, data } = this.state;\r\n    if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.children}\r\n        <div>{this.props.userName}</div>\r\n        <ul>\r\n          {data.map(value => {\r\n            return <li key={value.username}>{value.username}</li>;\r\n          })}\r\n        </ul>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\r\nclass MapContainer extends Component {\r\n  state = {\r\n    selectedPlace: {\r\n      name: \"Tokyo\"\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Map\r\n        style={{ width: \"100%\", height: \"500px\" }}\r\n        google={this.props.google}\r\n        // initialCenter={{\r\n        //   lat: 40.854885,\r\n        //   lng: -88.081807\r\n        // }}\r\n        zoom={14}\r\n      >\r\n        <Marker onClick={this.onMarkerClick} name={\"Current location\"} />\r\n\r\n        <InfoWindow onClose={this.onInfoWindowClose}>\r\n          <div>\r\n            <h1>{this.state.selectedPlace.name}</h1>\r\n          </div>\r\n        </InfoWindow>\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyAyD6cKed6FXl4rIqJnsGdKh9Uq4-WLRpA\"\r\n})(MapContainer);\r\n","import React from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.scss\";\n// import Login from \"./components/login\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Nav from \"./components/nav\";\nimport Home from \"./screens/home\";\nimport AboutUs from \"./screens/aboutUs\";\nimport ContactUs from \"./screens/contactUs\";\nimport Fortnite from \"./screens/fortnite\";\nimport Login from \"./screens/login\";\nimport MapContainer from \"./screens/mapContainter\";\nfunction App() {\n  return (\n    <React.Fragment>\n      {/* <Login /> */}\n      <Router>\n        <Nav />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/aboutUs\" component={AboutUs} />\n          <Route path=\"/contactUs\" component={ContactUs} />\n          <Route path=\"/fortnite\" component={Fortnite} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/map\" component={MapContainer} />\n        </Switch>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const loggedReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"SIGN_IN\":\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loggedReducer;\r\n","const counterReducer = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case \"INCREMENT\":\r\n      return state + 1;\r\n    case \"DECREMENT\":\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default counterReducer;\r\n","import loggedReducer from \"./isLogged\";\r\nimport counterReducer from \"./counter\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst allReducers = combineReducers({\r\n  counter: counterReducer,\r\n  logged: loggedReducer\r\n});\r\n\r\nexport default allReducers;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { createStore } from \"redux\";\nimport allReducer from \"./reducers\";\nimport { Provider } from \"react-redux\";\nconst store = createStore(\n  allReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}